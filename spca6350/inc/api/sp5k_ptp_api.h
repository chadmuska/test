/**************************************************************************
 *
 *       Copyright (c) 2002-2016 by iCatch Technology, Inc.
 *
 *  This software is copyrighted by and is the property of iCatch
 *  Technology, Inc.. All rights are reserved by iCatch Technology, Inc..
 *  This software may only be used in accordance with the corresponding
 *  license agreement. Any unauthorized use, duplication, distribution,
 *  or disclosure of this software is expressly forbidden.
 *
 *  This Copyright notice MUST not be removed or modified without prior
 *  written consent of iCatch Technology, Inc..
 *
 *  iCatch Technology, Inc. reserves the right to modify this software
 *  without notice.
 *
 *  iCatch Technology, Inc.
 *  19-1, Innovation First Road, Science-Based Industrial Park,
 *  Hsin-Chu, Taiwan.
*
*  Author:
*
*******************************************************************************/
#ifndef _SP5K_PTP_API_H_
#define _SP5K_PTP_API_H_

#include "common.h"
#include "middleware/pima_code.h"

/*******************************************************************************
*                          D A T A    T Y P E S
*******************************************************************************/
typedef void (*fpsp5kPtpCallBack_t)(UINT8 *ppayload, UINT8 *pdata, UINT32);


/* Container */
typedef struct sp5kSIDCContainer_s {
	UINT32 length;
	UINT16 type;
	UINT16 code;
	UINT32 transactionID;
	UINT32 payload;
} sp5kSIDCContainer_t;

/* For DPS */
/* Get ConfigPrintService by SP5K_DPS_PRT_INFO
   2nd define in each line is kept to avoid broken build */
typedef enum {
	SP5K_PRT_INFO_VENDOR_NAME      = 0x02010001, SP5K_prtVendorName = SP5K_PRT_INFO_VENDOR_NAME,
	SP5K_PRT_INFO_VENDOR_SPECIFIC_VERSION = 0x02010002, SP5K_prtVendorSpecificVersion = SP5K_PRT_INFO_VENDOR_SPECIFIC_VERSION,
	SP5K_PRT_INFO_PRODUCT_NAME     = 0x02010003, SP5K_prtProductName = SP5K_PRT_INFO_PRODUCT_NAME,
	SP5K_PRT_INFO_SERIAL_NO        = 0x02010004, SP5K_prtSerialNo = SP5K_PRT_INFO_SERIAL_NO,
} sp5k_Dps_PrtInfoGet;

/* Get Capability, 2nd define in each line is kept to avoid broken build */
typedef enum {
	SP5K_DPS_CAP_QUALITY        = 0x02020001, SP5K_QUALITIY = SP5K_DPS_CAP_QUALITY,
	SP5K_DPS_CAP_PAPERSIZES     = 0x02020002, SP5K_PAPERSIZES  = SP5K_DPS_CAP_PAPERSIZES,
	SP5K_DPS_CAP_PAPERTYPES     = 0x02020003, SP5K_PAPERTYPES  = SP5K_DPS_CAP_PAPERTYPES,
	SP5K_DPS_CAP_FILETYPES      = 0x02020004, SP5K_FILETYPES  = SP5K_DPS_CAP_FILETYPES,
	SP5K_DPS_CAP_DATEPRINTS     = 0x02020005, SP5K_DATEPRINTS  = SP5K_DPS_CAP_DATEPRINTS,
	SP5K_DPS_CAP_FILENAMEPRINTS = 0x02020006, SP5K_FILENAMEPRINTS = SP5K_DPS_CAP_FILENAMEPRINTS,
	SP5K_DPS_CAP_IMAGEOPTIMIZES = 0x02020007, SP5K_IMAGEOPTIMIZES = SP5K_DPS_CAP_IMAGEOPTIMIZES,
	SP5K_DPS_CAP_LAYOUTS        = 0x02020008, SP5K_LAYOUTS  = SP5K_DPS_CAP_LAYOUTS,
	SP5K_DPS_CAP_FIXEDSIZES     = 0x02020009, SP5K_FIXEDSIZES  = SP5K_DPS_CAP_FIXEDSIZES,
	SP5K_DPS_CAP_CROPPINGS      = 0x0202000A, SP5K_CROPPINGS  = SP5K_DPS_CAP_CROPPINGS,
} Get_Capability;

/* Set Capability, 2nd define in each line is kept to avoid broken build */
typedef enum {
	SP5K_DPS_CAP_SET_QUALITY       = 0x0000, SP5K_SET_QUALITY = SP5K_DPS_CAP_SET_QUALITY,
	SP5K_DPS_CAP_SET_PAPERSIZE     = 0x0001, SP5K_SET_PAPERSIZE = SP5K_DPS_CAP_SET_PAPERSIZE,
	SP5K_DPS_CAP_SET_PAPERTYPE     = 0x0002, SP5K_SET_PAPERTYPE = SP5K_DPS_CAP_SET_PAPERTYPE,
	SP5K_DPS_CAP_SET_FILETYPE      = 0x0003, SP5K_SET_FILETYPE = SP5K_DPS_CAP_SET_FILETYPE,
	SP5K_DPS_CAP_SET_DATEPRINT     = 0x0004, SP5K_SET_DATEPRINT = SP5K_DPS_CAP_SET_DATEPRINT,
	SP5K_DPS_CAP_SET_FILENAMEPRINT = 0x0005, SP5K_SET_FILENAMEPRINT= SP5K_DPS_CAP_SET_FILENAMEPRINT,
	SP5K_DPS_CAP_SET_IMAGEOPTIMIZE = 0x0006, SP5K_SET_IMAGEOPTIMIZE= SP5K_DPS_CAP_SET_IMAGEOPTIMIZE,
	SP5K_DPS_CAP_SET_LAYOUT        = 0x0007, SP5K_SET_LAYOUT = SP5K_DPS_CAP_SET_LAYOUT,
	SP5K_DPS_CAP_SET_FIXEDSIZE     = 0x0008, SP5K_SET_FIXEDSIZE = SP5K_DPS_CAP_SET_FIXEDSIZE,
	SP5K_DPS_CAP_SET_CROPPING      = 0x0009, SP5K_SET_CROPPING = SP5K_DPS_CAP_SET_CROPPING,
} CapType;

/* Capability value, 2nd define in each line is kept to avoid broken build */
typedef enum {
	SP5K_DPS_CAP_SUB_QUALITY_DEFAULT            = 0x50000000, SP5K_Quality_Default = SP5K_DPS_CAP_SUB_QUALITY_DEFAULT,
	SP5K_DPS_CAP_SUB_QUALITY_NORMAL             = 0x50010000, SP5K_Quality_Normal = SP5K_DPS_CAP_SUB_QUALITY_NORMAL,
	SP5K_DPS_CAP_SUB_QUALITY_DRAFT              = 0x50020000, SP5K_Quality_Draft = SP5K_DPS_CAP_SUB_QUALITY_DRAFT,
	SP5K_DPS_CAP_SUB_QUALITY_FINE               = 0x50030000, SP5K_Quality_Fine = SP5K_DPS_CAP_SUB_QUALITY_FINE,
	SP5K_DPS_CAP_SUB_PAPERSIZE_DEFAULT          = 0x51000000, SP5K_PaperSize_Default = SP5K_DPS_CAP_SUB_PAPERSIZE_DEFAULT,
	SP5K_DPS_CAP_SUB_PAPERSIZE_L                = 0x51010000, SP5K_PaperSize_L = SP5K_DPS_CAP_SUB_PAPERSIZE_L,
	SP5K_DPS_CAP_SUB_PAPERSIZE_2L               = 0x51020000, SP5K_PaperSize_2L = SP5K_DPS_CAP_SUB_PAPERSIZE_2L,
	SP5K_DPS_CAP_SUB_PAPERSIZE_HAGAKIPOSTCARD   = 0x51030000, SP5K_PaperSize_HagakiPostcard = SP5K_DPS_CAP_SUB_PAPERSIZE_HAGAKIPOSTCARD,
	SP5K_DPS_CAP_SUB_PAPERSIZE_CARDSIZE         = 0x51040000, SP5K_PaperSize_CardSize = SP5K_DPS_CAP_SUB_PAPERSIZE_CARDSIZE,
	SP5K_DPS_CAP_SUB_PAPERSIZE_100MMX150MM      = 0x51050000, SP5K_PaperSize_100mmX150mm = SP5K_DPS_CAP_SUB_PAPERSIZE_100MMX150MM,
	SP5K_DPS_CAP_SUB_PAPERSIZE_4X6IN            = 0x51060000, SP5K_PaperSize_4X6in = SP5K_DPS_CAP_SUB_PAPERSIZE_4X6IN,
	SP5K_DPS_CAP_SUB_PAPERSIZE_8X10IN           = 0x51070000, SP5K_PaperSize_8X10in = SP5K_DPS_CAP_SUB_PAPERSIZE_8X10IN,
	SP5K_DPS_CAP_SUB_PAPERSIZE_LETTER           = 0x51080000, SP5K_PaperSize_Letter = SP5K_DPS_CAP_SUB_PAPERSIZE_LETTER,
	SP5K_DPS_CAP_SUB_PAPERSIZE_11X17IN          = 0x510A0000, SP5K_PaperSize_11X17in = SP5K_DPS_CAP_SUB_PAPERSIZE_11X17IN,
	SP5K_DPS_CAP_SUB_PAPERSIZE_A0               = 0x51100000, SP5K_PaperSize_A0 = SP5K_DPS_CAP_SUB_PAPERSIZE_A0,
	SP5K_DPS_CAP_SUB_PAPERSIZE_A1               = 0x51110000, SP5K_PaperSize_A1 = SP5K_DPS_CAP_SUB_PAPERSIZE_A1,
	SP5K_DPS_CAP_SUB_PAPERSIZE_A2               = 0x51120000, SP5K_PaperSize_A2 = SP5K_DPS_CAP_SUB_PAPERSIZE_A2,
	SP5K_DPS_CAP_SUB_PAPERSIZE_A3               = 0x51130000, SP5K_PaperSize_A3 = SP5K_DPS_CAP_SUB_PAPERSIZE_A3,
	SP5K_DPS_CAP_SUB_PAPERSIZE_A4               = 0x51140000, SP5K_PaperSize_A4 = SP5K_DPS_CAP_SUB_PAPERSIZE_A4,
	SP5K_DPS_CAP_SUB_PAPERSIZE_A5               = 0x51150000, SP5K_PaperSize_A5 = SP5K_DPS_CAP_SUB_PAPERSIZE_A5,
	SP5K_DPS_CAP_SUB_PAPERSIZE_A6               = 0x51160000, SP5K_PaperSize_A6 = SP5K_DPS_CAP_SUB_PAPERSIZE_A6,
	SP5K_DPS_CAP_SUB_PAPERSIZE_A7               = 0x51170000, SP5K_PaperSize_A7 = SP5K_DPS_CAP_SUB_PAPERSIZE_A7,
	SP5K_DPS_CAP_SUB_PAPERSIZE_A8               = 0x51180000, SP5K_PaperSize_A8 = SP5K_DPS_CAP_SUB_PAPERSIZE_A8,
	SP5K_DPS_CAP_SUB_PAPERSIZE_A9               = 0x51190000, SP5K_PaperSize_A9 = SP5K_DPS_CAP_SUB_PAPERSIZE_A9,
	SP5K_DPS_CAP_SUB_PAPERSIZE_B0               = 0x51200000, SP5K_PaperSize_B0 = SP5K_DPS_CAP_SUB_PAPERSIZE_B0,
	SP5K_DPS_CAP_SUB_PAPERSIZE_B1               = 0x51210000, SP5K_PaperSize_B1 = SP5K_DPS_CAP_SUB_PAPERSIZE_B1,
	SP5K_DPS_CAP_SUB_PAPERSIZE_B2               = 0x51220000, SP5K_PaperSize_B2 = SP5K_DPS_CAP_SUB_PAPERSIZE_B2,
	SP5K_DPS_CAP_SUB_PAPERSIZE_B3               = 0x51230000, SP5K_PaperSize_B3 = SP5K_DPS_CAP_SUB_PAPERSIZE_B3,
	SP5K_DPS_CAP_SUB_PAPERSIZE_B4               = 0x51240000, SP5K_PaperSize_B4 = SP5K_DPS_CAP_SUB_PAPERSIZE_B4,
	SP5K_DPS_CAP_SUB_PAPERSIZE_B5               = 0x51250000, SP5K_PaperSize_B5 = SP5K_DPS_CAP_SUB_PAPERSIZE_B5,
	SP5K_DPS_CAP_SUB_PAPERSIZE_B6               = 0x51260000, SP5K_PaperSize_B6 = SP5K_DPS_CAP_SUB_PAPERSIZE_B6,
	SP5K_DPS_CAP_SUB_PAPERSIZE_B7               = 0x51270000, SP5K_PaperSize_B7 = SP5K_DPS_CAP_SUB_PAPERSIZE_B7,
	SP5K_DPS_CAP_SUB_PAPERSIZE_B8               = 0x51280000, SP5K_PaperSize_B8 = SP5K_DPS_CAP_SUB_PAPERSIZE_B8,
	SP5K_DPS_CAP_SUB_PAPERSIZE_B9               = 0x51290000, SP5K_PaperSize_B9 = SP5K_DPS_CAP_SUB_PAPERSIZE_B9,
	SP5K_DPS_CAP_SUB_PAPERSIZE_89MMROLL         = 0x51810000, SP5K_PaperSize_89mmRoll = SP5K_DPS_CAP_SUB_PAPERSIZE_89MMROLL,
	SP5K_DPS_CAP_SUB_PAPERSIZE_127MMROLL        = 0x51820000, SP5K_PaperSize_127mmRoll = SP5K_DPS_CAP_SUB_PAPERSIZE_127MMROLL,
	SP5K_DPS_CAP_SUB_PAPERSIZE_100MMROLL        = 0x51860000, SP5K_PaperSize_100mmRoll = SP5K_DPS_CAP_SUB_PAPERSIZE_100MMROLL,
	SP5K_DPS_CAP_SUB_PAPERSIZE_210MMROLL        = 0x51940000, SP5K_PaperSize_210mmRoll = SP5K_DPS_CAP_SUB_PAPERSIZE_210MMROLL,
	SP5K_DPS_CAP_SUB_PAPERTYPE_DEFAULT          = 0x52000000, SP5K_PaperType_Default = SP5K_DPS_CAP_SUB_PAPERTYPE_DEFAULT,
	SP5K_DPS_CAP_SUB_PAPERTYPE_PLAIN            = 0x52010000, SP5K_PaperType_Plain = SP5K_DPS_CAP_SUB_PAPERTYPE_PLAIN,
	SP5K_DPS_CAP_SUB_PAPERTYPE_PHOTO            = 0x52020000, SP5K_PaperType_Photo = SP5K_DPS_CAP_SUB_PAPERTYPE_PHOTO,
	SP5K_DPS_CAP_SUB_PAPERTYPE_FASTPHOTP        = 0x52030000, SP5K_PaperType_FastPhotp = SP5K_DPS_CAP_SUB_PAPERTYPE_FASTPHOTP,
	SP5K_DPS_CAP_SUB_FILETYPE_DEFAULT           = 0x53000000, SP5K_FileType_Default = SP5K_DPS_CAP_SUB_FILETYPE_DEFAULT,
	SP5K_DPS_CAP_SUB_FILETYPE_EXIF_JPEG         = 0x53010000, SP5K_FileType_Exif_Jpeg = SP5K_DPS_CAP_SUB_FILETYPE_EXIF_JPEG,
	SP5K_DPS_CAP_SUB_FILETYPE_EXIF              = 0x53020000, SP5K_FileType_Exif = SP5K_DPS_CAP_SUB_FILETYPE_EXIF,
	SP5K_DPS_CAP_SUB_FILETYPE_JPEG              = 0x53030000, SP5K_FileType_Jpeg = SP5K_DPS_CAP_SUB_FILETYPE_JPEG,
	SP5K_DPS_CAP_SUB_FILETYPE_TIFEP             = 0x53040000, SP5K_FileType_TifEp = SP5K_DPS_CAP_SUB_FILETYPE_TIFEP,
	SP5K_DPS_CAP_SUB_FILETYPE_FLASHPIX          = 0x53050000, SP5K_FileType_FlashPix = SP5K_DPS_CAP_SUB_FILETYPE_FLASHPIX,
	SP5K_DPS_CAP_SUB_FILETYPE_BMP               = 0x53060000, SP5K_FileType_Bmp = SP5K_DPS_CAP_SUB_FILETYPE_BMP,
	SP5K_DPS_CAP_SUB_FILETYPE_CIFF              = 0x53070000, SP5K_FileType_Ciff = SP5K_DPS_CAP_SUB_FILETYPE_CIFF,
	SP5K_DPS_CAP_SUB_FILETYPE_GIF               = 0x53080000, SP5K_FileType_Gif = SP5K_DPS_CAP_SUB_FILETYPE_GIF,
	SP5K_DPS_CAP_SUB_FILETYPE_JFIF              = 0x53090000, SP5K_FileType_Jfif = SP5K_DPS_CAP_SUB_FILETYPE_JFIF,
	SP5K_DPS_CAP_SUB_FILETYPE_PCD               = 0x530A0000, SP5K_FileType_Pcd = SP5K_DPS_CAP_SUB_FILETYPE_PCD,
	SP5K_DPS_CAP_SUB_FILETYPE_PICT              = 0x530B0000, SP5K_FileType_Pict = SP5K_DPS_CAP_SUB_FILETYPE_PICT,
	SP5K_DPS_CAP_SUB_FILETYPE_PNG               = 0x530C0000, SP5K_FileType_Png = SP5K_DPS_CAP_SUB_FILETYPE_PNG,
	SP5K_DPS_CAP_SUB_FILETYPE_TIFF              = 0x530D0000, SP5K_FileType_Tiff = SP5K_DPS_CAP_SUB_FILETYPE_TIFF,
	SP5K_DPS_CAP_SUB_FILETYPE_TIFIT             = 0x530E0000, SP5K_FileType_TifIt = SP5K_DPS_CAP_SUB_FILETYPE_TIFIT,
	SP5K_DPS_CAP_SUB_FILETYPE_JP2               = 0x530F0000, SP5K_FileType_Jp2 = SP5K_DPS_CAP_SUB_FILETYPE_JP2,
	SP5K_DPS_CAP_SUB_FILETYPE_JPX               = 0x53100000, SP5K_FileType_Jpx = SP5K_DPS_CAP_SUB_FILETYPE_JPX,
	SP5K_DPS_CAP_SUB_FILETYPE_UNDEFINENONIMG    = 0x53110000, SP5K_FileType_UndefineNonImg = SP5K_DPS_CAP_SUB_FILETYPE_UNDEFINENONIMG,
	SP5K_DPS_CAP_SUB_FILETYPE_ASSOCATION        = 0x53120000, SP5K_FileType_Assocation = SP5K_DPS_CAP_SUB_FILETYPE_ASSOCATION,
	SP5K_DPS_CAP_SUB_FILETYPE_SCRIPT            = 0x53130000, SP5K_FileType_Script = SP5K_DPS_CAP_SUB_FILETYPE_SCRIPT,
	SP5K_DPS_CAP_SUB_FILETYPE_EXECUTABLE        = 0x53140000, SP5K_FileType_Executable = SP5K_DPS_CAP_SUB_FILETYPE_EXECUTABLE,
	SP5K_DPS_CAP_SUB_FILETYPE_TEXT              = 0x53150000, SP5K_FileType_Text = SP5K_DPS_CAP_SUB_FILETYPE_TEXT,
	SP5K_DPS_CAP_SUB_FILETYPE_HTML              = 0x53160000, SP5K_FileType_Html = SP5K_DPS_CAP_SUB_FILETYPE_HTML,
	SP5K_DPS_CAP_SUB_FILETYPE_XHTMLPRINT        = 0x53170000, SP5K_FileType_XhtmlPrint = SP5K_DPS_CAP_SUB_FILETYPE_XHTMLPRINT,
	SP5K_DPS_CAP_SUB_FILETYPE_DPOF              = 0x53180000, SP5K_FileType_Dpof = SP5K_DPS_CAP_SUB_FILETYPE_DPOF,
	SP5K_DPS_CAP_SUB_FILETYPE_AIFF              = 0x53190000, SP5K_FileType_Aiff = SP5K_DPS_CAP_SUB_FILETYPE_AIFF,
	SP5K_DPS_CAP_SUB_FILETYPE_WAV               = 0x531A0000, SP5K_FileType_Wav = SP5K_DPS_CAP_SUB_FILETYPE_WAV,
	SP5K_DPS_CAP_SUB_FILETYPE_MP3               = 0x531B0000, SP5K_FileType_Mp3 = SP5K_DPS_CAP_SUB_FILETYPE_MP3,
	SP5K_DPS_CAP_SUB_FILETYPE_AVI               = 0x531C0000, SP5K_FileType_Avi = SP5K_DPS_CAP_SUB_FILETYPE_AVI,
	SP5K_DPS_CAP_SUB_FILETYPE_MPEG              = 0x531D0000, SP5K_FileType_Mpeg = SP5K_DPS_CAP_SUB_FILETYPE_MPEG,
	SP5K_DPS_CAP_SUB_FILETYPE_ASF               = 0x531E0000, SP5K_FileType_Asf = SP5K_DPS_CAP_SUB_FILETYPE_ASF,
	SP5K_DPS_CAP_SUB_DATEPRINT_DEFAULT          = 0x54000000, SP5K_DatePrint_Default = SP5K_DPS_CAP_SUB_DATEPRINT_DEFAULT,
	SP5K_DPS_CAP_SUB_DATEPRINT_OFF              = 0x54010000, SP5K_DatePrint_Off = SP5K_DPS_CAP_SUB_DATEPRINT_OFF,
	SP5K_DPS_CAP_SUB_DATEPRINT_ON               = 0x54020000, SP5K_DatePrint_On = SP5K_DPS_CAP_SUB_DATEPRINT_ON,
	SP5K_DPS_CAP_SUB_FILENAMEPRINT_DEFAULT      = 0x55000000, SP5K_FileNamePrint_Default = SP5K_DPS_CAP_SUB_FILENAMEPRINT_DEFAULT,
	SP5K_DPS_CAP_SUB_FILENAMEPRINT_OFF          = 0x55010000, SP5K_FileNamePrint_Off = SP5K_DPS_CAP_SUB_FILENAMEPRINT_OFF,
	SP5K_DPS_CAP_SUB_FILENAMEPRINT_ON           = 0x55020000, SP5K_FileNamePrint_On = SP5K_DPS_CAP_SUB_FILENAMEPRINT_ON,
	SP5K_DPS_CAP_SUB_IMAGEOPTIMIZE_DEFAULT      = 0x56000000, SP5K_ImageOptimize_Default = SP5K_DPS_CAP_SUB_IMAGEOPTIMIZE_DEFAULT,
	SP5K_DPS_CAP_SUB_IMAGEOPTIMIZE_OFF          = 0x56010000, SP5K_ImageOptimize_Off = SP5K_DPS_CAP_SUB_IMAGEOPTIMIZE_OFF,
	SP5K_DPS_CAP_SUB_IMAGEOPTIMIZE_ON           = 0x56020000, SP5K_ImageOptimize_On = SP5K_DPS_CAP_SUB_IMAGEOPTIMIZE_ON,
	SP5K_DPS_CAP_SUB_LAYOUT_DEFAULT             = 0x57000000, SP5K_Layout_Default = SP5K_DPS_CAP_SUB_LAYOUT_DEFAULT,
	SP5K_DPS_CAP_SUB_LAYOUT_1UPLAYOUT           = 0x57010000, SP5K_Layout_1UpLayout = SP5K_DPS_CAP_SUB_LAYOUT_1UPLAYOUT,
	SP5K_DPS_CAP_SUB_LAYOUT_2UPLAYOUT           = 0x57020000, SP5K_Layout_2UpLayout = SP5K_DPS_CAP_SUB_LAYOUT_2UPLAYOUT,
	SP5K_DPS_CAP_SUB_LAYOUT_250UPLAYOUT         = 0x57FA0000, SP5K_Layout_250UpLayout = SP5K_DPS_CAP_SUB_LAYOUT_250UPLAYOUT,
	SP5K_DPS_CAP_SUB_LAYOUT_INDEXPRINT          = 0x57FE0000, SP5K_Layout_IndexPrint = SP5K_DPS_CAP_SUB_LAYOUT_INDEXPRINT,
	SP5K_DPS_CAP_SUB_LAYOUT_1UPBORDERLESS       = 0x57FF0000, SP5K_Layout_1UpBorderLess = SP5K_DPS_CAP_SUB_LAYOUT_1UPBORDERLESS,
	SP5K_DPS_CAP_SUB_FIXEDSIZES_DEFAULT         = 0x58000000, SP5K_FixedSizes_Default = SP5K_DPS_CAP_SUB_FIXEDSIZES_DEFAULT,
	SP5K_DPS_CAP_SUB_FIXEDSIZES_2HX3QIN         = 0x58010000, SP5K_FixedSizes_2HX3Qin = SP5K_DPS_CAP_SUB_FIXEDSIZES_2HX3QIN,
	SP5K_DPS_CAP_SUB_FIXEDSIZES_3HX5IN          = 0x58020000, SP5K_FixedSizes_3HX5in = SP5K_DPS_CAP_SUB_FIXEDSIZES_3HX5IN,
	SP5K_DPS_CAP_SUB_FIXEDSIZES_4X6IN           = 0x58030000, SP5K_FixedSizes_4X6in = SP5K_DPS_CAP_SUB_FIXEDSIZES_4X6IN,
	SP5K_DPS_CAP_SUB_FIXEDSIZES_5X7IN           = 0x58040000, SP5K_FixedSizes_5X7in = SP5K_DPS_CAP_SUB_FIXEDSIZES_5X7IN,
	SP5K_DPS_CAP_SUB_FIXEDSIZES_8X10IN          = 0x58050000, SP5K_FixedSizes_8X10in = SP5K_DPS_CAP_SUB_FIXEDSIZES_8X10IN,
	SP5K_DPS_CAP_SUB_FIXEDSIZES_254X178MM       = 0x58060000, SP5K_FixedSizes_254X178mm = SP5K_DPS_CAP_SUB_FIXEDSIZES_254X178MM,
	SP5K_DPS_CAP_SUB_FIXEDSIZES_110X74MM        = 0x58070000, SP5K_FixedSizes_110X74mm = SP5K_DPS_CAP_SUB_FIXEDSIZES_110X74MM,
	SP5K_DPS_CAP_SUB_FIXEDSIZES_89X55MM         = 0x58080000, SP5K_FixedSizes_89X55mm = SP5K_DPS_CAP_SUB_FIXEDSIZES_89X55MM,
	SP5K_DPS_CAP_SUB_FIXEDSIZES_100X148MM       = 0x58090000, SP5K_FixedSizes_100X148mm = SP5K_DPS_CAP_SUB_FIXEDSIZES_100X148MM,
	SP5K_DPS_CAP_SUB_FIXEDSIZES_6X8CM           = 0x580A0000, SP5K_FixedSizes_6X8cm = SP5K_DPS_CAP_SUB_FIXEDSIZES_6X8CM,
	SP5K_DPS_CAP_SUB_FIXEDSIZES_7X10CM          = 0x580B0000, SP5K_FixedSizes_7X10cm = SP5K_DPS_CAP_SUB_FIXEDSIZES_7X10CM,
	SP5K_DPS_CAP_SUB_FIXEDSIZES_9X13CM          = 0x580C0000, SP5K_FixedSizes_9X13cm = SP5K_DPS_CAP_SUB_FIXEDSIZES_9X13CM,
	SP5K_DPS_CAP_SUB_FIXEDSIZES_10X15CM         = 0x580D0000, SP5K_FixedSizes_10X15cm = SP5K_DPS_CAP_SUB_FIXEDSIZES_10X15CM,
	SP5K_DPS_CAP_SUB_FIXEDSIZES_13X18CM         = 0x580E0000, SP5K_FixedSizes_13X18cm = SP5K_DPS_CAP_SUB_FIXEDSIZES_13X18CM,
	SP5K_DPS_CAP_SUB_FIXEDSIZES_15X21CM         = 0x580F0000, SP5K_FixedSizes_15X21cm = SP5K_DPS_CAP_SUB_FIXEDSIZES_15X21CM,
	SP5K_DPS_CAP_SUB_FIXEDSIZES_18X24CM         = 0x58100000, SP5K_FixedSizes_18X24cm = SP5K_DPS_CAP_SUB_FIXEDSIZES_18X24CM,
	SP5K_DPS_CAP_SUB_FIXEDSIZES_A4              = 0x58110000, SP5K_FixedSizes_A4 = SP5K_DPS_CAP_SUB_FIXEDSIZES_A4,
	SP5K_DPS_CAP_SUB_FIXEDSIZES_LETTER          = 0x58120000, SP5K_FixedSizes_Letter = SP5K_DPS_CAP_SUB_FIXEDSIZES_LETTER,
	SP5K_DPS_CAP_SUB_CROPPING_DEFAULT           = 0x59000000, SP5K_Cropping_Default = SP5K_DPS_CAP_SUB_CROPPING_DEFAULT,
	SP5K_DPS_CAP_SUB_CROPPING_OFF               = 0x59010000, SP5K_Cropping_Off = SP5K_DPS_CAP_SUB_CROPPING_OFF,
	SP5K_DPS_CAP_SUB_CROPPING_ON                = 0x59020000, SP5K_Cropping_On = SP5K_DPS_CAP_SUB_CROPPING_ON,
} cap_value;

/*paramId*/
typedef enum {
	SP5K_PTP_OP_FUNC_CB               = 0x100,
	SP5K_PTP_DUPLICATE_OP_CFG         = 0x101,
	SP5K_PTP_OBJ_HANDLE_BY_PATHNAME   = 0x202,
	SP5K_PTP_STORAGE_ID_BY_DRIVE_ID   = 0x203,
	SP5K_PTP_PATHNAME_BY_OBJ_HANDLE	  = 0x204,
	SP5K_PTP_FORMAT_BY_OBJ_HANDLE	  = 0x205,
	SP5K_PTP_STORAGE_DESC_BY_DRIVE_ID = 0x206,
	SP5K_PTP_STORAGE_VOL_BY_DRIVE_ID  = 0x207,
	/*
	 * cb(sp5kMediaVideoTagUserDataGet_t *pdata,
	 *    UINT8 *pdst, UINT32 dstsz, UINT32 *pwidth, UINT32 *pheight);
	 */
	SP5K_PTP_PIMA_OP_VIDEO_THUMB_CB   = 0x208,
	SP5K_PTP_PIMA_OP_CTRL = 0x209,
	SP5K_PTP_PIMA_EVT_CTRL = 0x20A,
	SP5K_PTP_PIMA_CAPFORM_CTRL = 0x20B,
	SP5K_PTP_PIMA_IMGFORM_CTRL = 0x20C,
	SP5K_PTP_PIMA_EXIF_LENGTH = 0x20D,
} sp5kPtpCfg_t;

typedef enum {
	SP5K_DPS_PRT_INFO                 = 0x200,
	SP5K_DPS_PRT_CAPABILITY           = 0x201,
	SP5K_DPS_PRT_FILE_ID              = 0x202,
	SP5K_DPS_PRT_MAX_IMGNUM  	= 0x203, /* allow to select the max printing image's number per once */
	SP5K_DPS_DATE_PATTERN             = 0x1000,
} sp5kDpsAttr_t;



/*for ptp Physical transmission*/
typedef enum {
	SP5K_PTP_USB    = 0,
	SP5K_PTP_IP     = 1,
} sp5kPtpTypeCfg_e;

/* The fields in the structure has to be consistent with dpsJobCropArea_t */
typedef struct sp5kDpsCropArea_s {
	UINT16 wCropX;
	UINT16 wCropY;
	UINT16 wCropW;
	UINT16 wCropH;
}sp5kDpsCropArea_t;

typedef enum {
	SP5K_DPS_DATE_TYPE1 = 0x01030001, /*  2002/10/31   */
	SP5K_DPS_DATE_TYPE2 = 0x01030002, /*  31/10/2002   */
	SP5K_DPS_DATE_TYPE3 = 0x01030003, /*  10/31/2002   */
	SP5K_DPS_DATE_TYPE4 = 0x01030004, /*  31 Oct, 2002 */
	SP5K_DPS_DATE_TYPE5 = 0x01030005, /*  Oct 31, 2002 */
	SP5K_DPS_DATE_TYPE6 = 0x01030006, /*  2002, Oct 31 */
	SP5K_DPS_DATE_TYPE7 = 0x01030007  /*  pattern "y m d"="2002 10 31", "y.M.d"="2002.Oct.31" */
} sp5k_date_Type;

/* The fields in the structure has to be consistent with dpsJobDate_t */
typedef struct sp5kDpsDate_s {
	UINT32 dateType;
	UINT32 wYear;
	UINT32 bMonth;
	UINT32 bDay;
} sp5kDpsDate_t;

/* The fields in the structure has to be consistent with dpsDeviceStatusParams_t */
typedef struct sp5kDpsDeviceStatus_s {
	UINT32 dpsPrintServiceStatus;
	UINT32 jobEndReason;
	UINT32 errorStatus;
	UINT32 errorReason;
	UINT32 disconnectEnable;
	UINT32 capabilityChanged;
	UINT32 newJobOK;
} sp5kDpsDeviceStatus_t;

/* The fields in the structure has to be consistent with dpsJobStatusParams_t */
typedef struct sp5kDpsJobStatus_s {
	UINT8 prtPID[4];
	UINT8 filePath[256];
	UINT8 copyID[4];
	UINT8 progress[8];
	UINT8 imagesPrinted[4];
} sp5kDpsJobStatus_t;

/* Job action */
typedef enum {
	SP5K_ACTION_START               = 0x00000001,
	SP5K_ACTION_CONTINUE            = 0x00000002,
	SP5K_ACTION_ABORT               = 0x00000003,
	SP5K_ACTION_START_DPOF			= 0x00000004
} sp5kDpsAction_t;

typedef enum {
	SP5K_PTP_DRIVE_DPS,
	SP5K_PTP_DRIVE_NAND,
	SP5K_PTP_DRIVE_SD,
	SP5K_PTP_DRIVE_RAM = 6,
} sp5kPtpDriveId_t;

/* PIMA 15740 Event Format Code */
typedef enum sp5kPimaEventCode_enum {
	SP5K_PIMA_EC_UNDEFINED               = PIMA_EC_UNDEFINED,
	SP5K_PIMA_EC_CANCEL_TRANSACTION,
	SP5K_PIMA_EC_OBJECT_ADDED,
	SP5K_PIMA_EC_OBJECT_REMOVED,
	SP5K_PIMA_EC_STORE_ADDED,
	SP5K_PIMA_EC_STORE_REMOVED,
	SP5K_PIMA_EC_DEVICE_PROP_CHANGED,
	SP5K_PIMA_EC_OBJECT_INFO_CHANGED,
	SP5K_PIMA_EC_DEVICE_INFO_CHANGED,
	SP5K_PIMA_EC_REQUEST_OBJECT_TRANSFER,
	SP5K_PIMA_EC_STORE_FULL,
	SP5K_PIMA_EC_DEVICE_RESET,
	SP5K_PIMA_EC_STORAGE_INFO_CHANGED,
	SP5K_PIMA_EC_CAPTURE_COMPLETE,
	SP5K_PIMA_EC_UNREPORTED_STATUS,
	/* iCatch vendor event code */
	SP5K_PIMA_EC_ICATCH_HOST_EVENT		= PIMA_EC_ICATCH_HOST_EVENT,
	/* end */
	SP5K_PIMA_EC_NUM_MAX
} sp5kPimaEventCode_e;

/* PIMA 15740 Device Property Code */
typedef enum sp5kPimaDevicePropertyCode_enum {
	SP5K_PIMA_DPC_UNDEFINED               	= PIMA_DPC_UNDEFINED,
	SP5K_PIMA_DPC_BATTERY_LEVEL,
	SP5K_PIMA_DPC_FUNCTIONAL_MODE,
	SP5K_PIMA_DPC_IMAGE_SIZE,
	SP5K_PIMA_DPC_COMPRESSION_SETTING,
	SP5K_PIMA_DPC_WHILE_BALANCE,
	SP5K_PIMA_DPC_RGB_GAIN,
	SP5K_PIMA_DPC_F_NUMBER,
	SP5K_PIMA_DPC_FOCAL_LENGTH,
	SP5K_PIMA_DPC_FOCUS_DISTANCE,
	SP5K_PIMA_DPC_FOCUS_MODE,
	SP5K_PIMA_DPC_EXPOSURE_METERING_MODE,
	SP5K_PIMA_DPC_FLASH_MODE,
	SP5K_PIMA_DPC_EXPOSURE_TIME,
	SP5K_PIMA_DPC_EXPOSURE_PROGRAM_MODE,
	SP5K_PIMA_DPC_EXPOSURE_INDEX,
	SP5K_PIMA_DPC_EXPOSURE_BAIS_COMPENSATION,
	SP5K_PIMA_DPC_DATE_TIME,
	SP5K_PIMA_DPC_CAPTURE_DELAY,
	SP5K_PIMA_DPC_STILL_CAPTURE_MODE,
	SP5K_PIMA_DPC_CONTRAST,
	SP5K_PIMA_DPC_SHARPNESS,
	SP5K_PIMA_DPC_DIGITAL_ZOOM,
	SP5K_PIMA_DPC_EFFECT_MODE,
	SP5K_PIMA_DPC_BURST_NUMBER,
	SP5K_PIMA_DPC_BURST_INTERVAL,
	SP5K_PIMA_DPC_TIMELAPSE_NUMBER,
	SP5K_PIMA_DPC_TIMELAPSE_INTERVAL,
	SP5K_PIMA_DPC_FOCUS_METERING_MODE,
	SP5K_PIMA_DPC_UPLOAD_URL,
	SP5K_PIMA_DPC_ARTIST,
	SP5K_PIMA_DPC_COPYRIGHT_INFO,

	/* iCatch vendor device property code */
	SP5K_PIMA_DPC_ICATCH_VARIABLE			= PIMA_DPC_ICATCH_VARIABLE,
	SP5K_PIMA_DPC_SCENE_MODE,
	SP5K_PIMA_DPC_OPTIC_RATIO,
	SP5K_PIMA_DPC_DSC_OP_MODE,
	SP5K_PIMA_DPC_VIDEO_SIZE,
	SP5K_PIMA_DPC_BAND_SELECTION,
	SP5K_PIMA_DPC_DATESTAMP,
	SP5K_PIMA_DPC_FREE_IN_IMAGE,
	SP5K_PIMA_DPC_UI_SUPPORT_WIFI_OP_FUNC,
	SP5K_PIMA_DPC_REMAIN_CAPACITY_IN_SECS,
	SP5K_PIMA_DPC_VIDEO_TIMELAPSE_INTERVAL,
	SP5K_PIMA_DPC_VIDEO_TIMELAPSE_LENGTH,
	SP5K_PIMA_DPC_CUSTOMER_NAME,
	SP5K_PIMA_DPC_CAR_MODE,
	SP5K_PIMA_DPC_SLOW_MOTION,
	SP5K_PIMA_DPC_MAX_ZOOM_RATIO,
	/* end */

	SP5K_PIMA_DPC_NUM_MAX
} sp5kPimaDevicePropertyCode_e;

typedef enum {
	SP5K_PIMA_CAPTURE_TRIG_STILL = PIMA_CAPTURE_TRIG_STILL,
	SP5K_PIMA_CAPTURE_TRIG_VIDEO = PIMA_CAPTURE_TRIG_VIDEO
}sp5kPtpTrigCaptureType_e;

typedef enum {
	SP5K_PTP_ICTL_PIMA_CAPTURE_DONE,
	SP5K_PTP_ICTL_PIMA_CUSTOM_RESP,
	SP5K_PTP_ICTL_PIMA_EVENT_SEND,
	SP5K_PTP_ICTL_PIMA_FILE_SEND,
	SP5K_PTP_ICTL_PIMA_FILE_SEND_CHK,
	SP5K_PTP_ICTL_MTP_BK_UPDATE_TYPE,
	SP5K_PTP_ICTL_MTP_BK_BUFFER_SIZE,
	SP5K_PTP_ICTL_CB_GET_INFO,
	SP5K_PTP_ICTL_CB_APPLY_INFO,
	SP5K_PTP_ICTL_CB_TRIG_CAPTURE,
	SP5K_PTP_ICTL_CB_ABORT_CAPTURE,
	SP5K_PTP_ICTL_CB_CUSTOM_OP,
	SP5K_PTP_ICTL_CB_FILTER_FILES,
	SP5K_PTP_ICTL_PIMA_DEV_PROP_NUM,
	SP5K_PTP_ICTL_PIMA_NODE_BUILD_STOP,
	SP5K_PTP_ICTL_CB_MTP_SORT_FILES,
} sp5kPtpiCatchCtl_t;

typedef enum {
	SP5K_MTP_BK_PAUSE = PIMA_MTP_BK_PAUSE,
	SP5K_MTP_BK_AUTO = PIMA_MTP_BK_AUTO,
	SP5K_MTP_BK_MANUAL = PIMA_MTP_BK_MANUAL
} sp5kMtpBkUpdateType_e;


typedef UINT32 (*SP5K_PTP_IP_CB_OPEN)(UINT32 handle);
typedef void (*SP5K_PTP_IP_CB_CLOSE)(UINT32 handle);
typedef UINT32 (*SP5K_PTP_IP_CB_ISCONNECT)(UINT32 handle);
typedef UINT32 (*SP5K_PTP_IP_CB_REQUEST_RECV)(UINT32 handle, UINT8 *req);
typedef UINT32 (*SP5K_PTP_IP_CB_RESPONSE_SEND)(UINT32 handle, UINT32 trans_id, UINT8 *resp, UINT32 len);
typedef UINT32 (*SP5K_PTP_IP_CB_EVENT_SEND)(UINT32 handle, UINT32 trans_id, UINT8 *evt, UINT32 len);
typedef UINT32 (*SP5K_PTP_IP_CB_EVENT_RECV)(UINT32 handle, UINT8 *evt);
typedef UINT32 (*SP5K_PTP_IP_CB_DATA_SEND)(UINT32 handle, UINT32 trans_id, UINT8 *data, UINT32 this_len, UINT32 total_len);
typedef UINT32 (*SP5K_PTP_IP_CB_DATA_LEN_GET)(UINT32 handle, UINT32 trans_id);
typedef UINT32 (*SP5K_PTP_IP_CB_DATA_RECV)(UINT32 handle, UINT32 trans_id, UINT8 *data, UINT32 len);
typedef void (*SP5K_PIMA_CB_INFO_GET)(UINT32, UINT32 *);
typedef void (*SP5K_PIMA_CB_INFO_APPLY)(UINT32, UINT32 *);
typedef UINT32 (*SP5K_PIMA_CB_ICATCH_HOST_OP_HANDLER)(UINT32, UINT32, UINT32);
typedef void (*SP5K_PIMA_CB_CAPTURE_IF)(sp5kPtpTrigCaptureType_e);
typedef UINT32 (*SP5K_PIMA_CB_FILE_FILTER)(UINT32, const UINT8*);

/*******************************************************************************
*               F U N C T I O N    D E C L A R A T I O N S
*******************************************************************************/

/* sp5k_sidc.c*/
void
sp5kPtpFuncReg(UINT32 Ptptype);

/*sp5k_ptp_ip.c */
void sp5kPtpIpCbReg(
	SP5K_PTP_IP_CB_OPEN pfuncOpen,
	SP5K_PTP_IP_CB_CLOSE pfuncClose,
	SP5K_PTP_IP_CB_ISCONNECT pfuncIsConnect,
	SP5K_PTP_IP_CB_REQUEST_RECV pfuncReqRecv,
	SP5K_PTP_IP_CB_RESPONSE_SEND pfuncRespSend,
	SP5K_PTP_IP_CB_EVENT_SEND pfuncEvtSend,
	SP5K_PTP_IP_CB_EVENT_RECV pfuncEvtRecv,
	SP5K_PTP_IP_CB_DATA_SEND pfuncDataSend,
	SP5K_PTP_IP_CB_DATA_LEN_GET pfuncDataRecvSzGet,
	SP5K_PTP_IP_CB_DATA_RECV pfuncDataRecv
);
void sp5kPtpIpCon(UINT32 enable);



/*sp5k_dps.c*/
UINT32 sp5kDpsPrtAttrGet(UINT32 paramId,...);

void sp5kDpsPrtAttrSet(UINT32 paramId,...);

UINT32
sp5kDpsPrtAddImage(
	UINT32 fileId,
	sp5kDpsCropArea_t *pcropArea,
	UINT8 *pfileName,
    sp5kDpsDate_t *pdate,
    UINT32 copies
);

UINT32
sp5kDpsPrtAction(
	UINT32 actType
);

/*sp5k_ptp.c*/
UINT32 sp5kPtpCfgSet(UINT32 paramId,...);
UINT32 sp5kPtpCfgGet(UINT32 paramId,...);

void sp5kPtpEventSend(UINT32 codeId,UINT32 param1,UINT32 param2,UINT32 param3);
UINT32 sp5kPtpDataSend(UINT8 *pdata, UINT32 dataLength);
UINT32 sp5kPtpResponseSend(UINT32 codeId, UINT32 paramCnt, ...);
UINT32 sp5kPtpInfoUpdate(void);
void sp5kPtpNodeFlushAll(void);
UINT32
sp5kPtpiCatchCtl(
	sp5kPtpiCatchCtl_t id,
	UINT32 par1,
	UINT32 par2,
	UINT32 par3,
	UINT32 par4
);

#endif /* _SP5K_PTP_API_H_ */
