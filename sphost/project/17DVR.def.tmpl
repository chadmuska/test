PLATFORM := spca6350
PLATFORM_VER := B
#ram := 1
nand := 0
spi := 1

ifndef PRJ_NAME
  # for makefile
  PRJ_NAME := 17DVR
endif

# pana cdfs
JET_PANA_CDFS := 1
ifeq ($(JET_PANA_CDFS),1)
CFLAGS += -DJET_PANA_CDFS=1
endif

#IQ_NAME   := OV4689
IQ_NAME  := AR0230
HW_NAME := HW_17DVR
BTN_NAME := 17dvr

TOUCH_PANEL := NO
MOTION_DETECT := NO
IMAGE_EFFECT := NO
WDR := NO
HDR := NO
EMULATION_MODE := NO

# sensor
#SENSOR_NAME  := OV4689
SENSOR_NAME := AR0230
#SENSOR_NAME := FAKE
SENSOR_CUSTOM_DEFINE  := YES
SENSOR_$(SENSOR_NAME) := YES
CFLAGS += -DSP5K_SENSOR_CUSTOM_DEFINE
SENSOR_POWERIC_ENABLE:=NO
CFLAGS += -DSP5K_SENSOR_$(SENSOR_NAME)=1
CFLAGS += -DSP5K_SENSOR_PIN_CB=1
CFLAGS += -DPOWERON_PB_WITHOUT_SENSOR=0 #JUST FOR DEBUG USE

# Sensor Power IC
ifeq ($(SENSOR_POWERIC_ENABLE), YES)
CFLAGS += -DSP5K_SENSOR_POWERIC_ENABLE=1
endif

ifeq ($(SENSOR_NAME), $(filter $(SENSOR_NAME), SONYIMX175 AR0330 SONYIMX118 SONYIMX206))
CFLAGS += -DVIDEO_SIZE_QVGA_DISABLE=1
endif
#ifeq ($(SENSOR_NAME), $(filter $(SENSOR_NAME), OV5653))
#CFLAGS += -DVIDEO_SIZE_VGA_DISABLE=0
#endif

HW_FACETRACK ?= YES
HW_DIST ?= NO

# When SENSOR_NAME / IQ_NAME is equal to ADV7480, must set HDMI_INPUT to YES
HDMI_INPUT := NO

# NEW DIQ
ifeq ($(HDMI_INPUT), YES)
DIQ_FRAMEWORK := NO
else
DIQ_FRAMEWORK := YES
endif

ifeq ($(DIQ_FRAMEWORK), YES)
CFLAGS += -DSP5K_DIQ_FRMWRK=1
endif

ifeq ($(ICAT_E3), YES)
 CFLAGS += -DUSB_VNDR_ICAT_E3=1
endif

ifeq ($(SMB_CLIENT),YES)
CFLAGS += -DSMB_CLIENT_SUPPORT=1
endif

#ANR
CFLAGS += -DSP5K_ANR_MODE=0

# 3A Info Debug Isaac change just for pana debug
CFLAGS += -DSP5K_3A_INFO_DBG=0
# YUV save in video recording
CFLAGS += -DSP5K_VREC_YUV_SAVE=0

# CVR MODE
CVR_MODE := YES
ifeq ($(CVR_MODE), YES)
CFLAGS += -DSP5K_CVR_MODE=1
CFLAGS += -DSP5K_CDFS_OPT=1
CFLAGS += -DSP5K_PVQV_DISABLE=1
CFLAGS += -DSP5K_SENSOR_DUAL_MODE=0
else
CFLAGS += -DSP5K_CDFS_OPT=0
CFLAGS += -DSP5K_SENSOR_DUAL_MODE=0
endif

CFLAGS += -DKIT_WITH_HDMI=1
CFLAGS += -DKIT_WITH_LENS=0
CFLAGS += -DKIT_FLASH_ENABLE=0

UVC_MODE := NO
ifeq ($(UVC_MODE), YES)
CFLAGS += -DSP5K_USB_UVC_SUPPORT=1
else
CFLAGS += -DSP5K_USB_UVC_SUPPORT=0
endif

ifeq ($(USBDISK), YES)
CFLAGS += -DUSB_DISK_SUPPORT=1
else
CFLAGS += -DUSB_DISK_SUPPORT=0
endif
ifeq ($(USBWIFI), YES)
CFLAGS += -DUSB_WIFI_SUPPORT=1
else
CFLAGS += -DUSB_WIFI_SUPPORT=0
endif

ETHERDRV := NO

#Isaac Add for Enable/Disable OSD
OSD_DISPLAY := NO

ifeq ($(OSD_DISPLAY), YES)
CFLAGS += -DOSD_DISPLAY_SUPPORT=1
else
CFLAGS += -DOSD_DISPLAY_SUPPORT=0
endif

#ADAS
TEST_ADAS := NO

ifeq ($(TEST_ADAS), YES)
	# CUSTOMER Video Preview Test State
	APP_STATE_CUSTOMER_VIDEOPV:= YES
	TEST_ADAS_LDWS := YES
	TEST_ADAS_FCWS := YES
	TEST_ADAS_LPD := YES

	#You can choose PRODUCT, DEMO or  DEBUG options, It could be YES only at the same time
	#1.PRODUCT_OSD
	TEST_ADAS_PRODUCT_OSD := YES
	#2.DEMO
	TEST_ADAS_DEMO := NO
	#3.DEBUG
	TEST_ADAS_DEBUG := NO
else
	APP_STATE_CUSTOMER_VIDEOPV:= NO
	TEST_ADAS_LDWS := NO
	TEST_ADAS_FCWS := NO
	TEST_ADAS_LPD := NO
	TEST_ADAS_PRODUCT_OSD := NO
	TEST_ADAS_DEMO := NO
	TEST_ADAS_DEBUG := NO
endif

#ADAS DEBUG Setting
ifeq ($(TEST_ADAS_DEBUG), YES)
	TEST_ADAS_PRODUCT_OSD := NO

	TEST_ADAS_DEMO := NO
    TEST_ADAS_DEMO_OSD := NO
    TEST_ADAS_DEMO_REC_RESULT_VIDEO := NO
    
    TEST_ADAS_DEBUG_REC_RESULT_VIDEO := YES
    #The DEBUG OSD only exists in video preview mode
	TEST_ADAS_DEBUG_DISPALY_OSD := YES
endif

#ADAS DEMO Setting
ifeq ($(TEST_ADAS_DEMO), YES)
	TEST_ADAS_DEMO_REC_RESULT_VIDEO := YES
    TEST_ADAS_DEMO_OSD := YES
	TEST_ADAS_PRODUCT_OSD := NO

	TEST_ADAS_DEBUG := NO
	TEST_ADAS_DEBUG_DISPALY_OSD := NO
	TEST_ADAS_DEBUG_REC_RESULT_VIDEO := NO
endif

#ADAS PRODUCT OSD Setting
ifeq ($(TEST_ADAS_PRODUCT_OSD), YES)
	TEST_ADAS_DEMO := NO
    TEST_ADAS_DEMO_OSD := NO
    TEST_ADAS_DEMO_REC_RESULT_VIDEO := NO

	TEST_ADAS_DEBUG := NO
	TEST_ADAS_DEBUG_DISPALY_OSD := NO
	TEST_ADAS_DEBUG_REC_RESULT_VIDEO := NO
endif

#GPS
GPS_OPEN := 0
ifeq ($(GPS_OPEN), 1)
CFLAGS += -DGPS_OPEN=1
CFLAGS += -DGPS_BY_UART0=0
CFLAGS += -DWRITE_USER_DATA=0
else
CFLAGS += -DGPS_OPEN=0
CFLAGS += -DWRITE_USER_DATA=1
endif

#COMPEL Battery Charger
CFLAGS += -DCOMPEL_CHARGING=1

#COMPEL Power Off Charging //v35 not ready
CFLAGS += -DCOMPEL_POWEROFF_CHARGE=0

#RTC WAKEUP
CFLAGS += -DRTC_WAKEUP_SUPPORT=1

# DRAM
CFLAGS += -DDDR3=1
HW_DDR3_PARM_2G :=NO

# WIFI >>>>>>
SDIODRV ?= NO
USBWIFI ?= NO
NDK2 := YES
RTMP := NO
ifeq ($(USBWIFI), YES)
	WIFION := YES
	CFLAGS += -DPTP_CAPTURE=1
	# Driver >>>
	WIFI_NAME := RTL8192EU
endif
ifeq ($(SDIODRV), YES)
	WIFION := YES
	CFLAGS += -DPTP_CAPTURE=1
	# Driver >>>
	WIFI_NAME := RTL8189ES
	#WIFI_NAME := RTL8723BS
	ifeq ($(SSLEN), YES)
		CFLAGS += -DSSLEN=1
	endif
endif

ifeq ($(WIFION),YES) # WIFI-ON
	CFLAGS += -DICAT_WIFI=1
	# WIFI Module
	ifeq ($(WIFI_NAME),MrvlSD8801)
		CFLAGS += -DSP5K_WIFI_VENDOR_MRVL -DSP5K_WIFI_CHIP_SD8801
		MAC80211 := YES
		WIFI_FW_PATH := A/RO_RES/Marvell
	else ifeq ($(WIFI_NAME),BCM43438)
		CFLAGS += -DSP5K_WIFI_VENDOR_BRCM -DSP5K_WIFI_CHIP_BCM43438
		MAC80211 := YES
		WIFI_FW_PATH := A/RO_RES/BCM43438
	else ifeq ($(WIFI_NAME),BCM43455)
		CFLAGS += -DSP5K_WIFI_VENDOR_BRCM -DSP5K_WIFI_CHIP_BCM43455
		MAC80211 := YES
		WIFI_FW_PATH := A/RO_RES/BCM43455
	else
		CFLAGS += -DSP5K_WIFI_REALTEK=1

		ifeq ($(WIFI_NAME), RTL8192EU)
			CFLAGS += -DSP5K_WIFI_RTL8192EU=1
		else ifeq ($(WIFI_NAME), RTL8189ES)
			CFLAGS += -DSP5K_WIFI_RTL8189ES=1
		else ifeq ($(WIFI_NAME), RTL8723BS)
			CFLAGS += -DSP5K_WIFI_RTL8723BS=1
			ifeq ($(BTON), YES)
				CFLAGS += -DSP5K_BTDEV_RTL8723BS=1
				CFLAGS += -DSP5K_BTON=1
			endif
		else ifeq ($(WIFI_NAME), RTL8192ES)
			CFLAGS += -DSP5K_WIFI_RTL8192ES=1
		else
			#error
		endif
	endif # WIFI_NAME

	ifeq ($(MAC80211),YES)
		CFLAGS += -DSP5K_WIFI_MAC80211
	endif

	# firmware files.
	ifneq ($(WIFI_FW_PATH),)
		WIFI_FW_RES_PATH := $(RES_PATH)/$(PRJ_NAME)/$(WIFI_FW_PATH)
		WIFI_FW_RES := $(addprefix $(WIFI_FW_PATH)/,$(notdir $(wildcard $(WIFI_FW_RES_PATH)/*.*)))
	endif # WIFI_FW_PATH

else # WIFI-OFF
	CFLAGS += -DICAT_WIFI=0
endif # WIFION

ifeq ($(findstring YES,$(WIFION) $(ETHERDRV)),YES)
LIVEST ?= 1
CFLAGS += -DSP5K_NDK2=1
endif

# WIFI <<<<<<

# lcd
CFLAGS += -DSP5K_LCD_CUSTOM_DEFINE
#CFLAGS += -DSP5K_LCD_GPM1177B1_UPS052=1
#CFLAGS 	+= -DSP5K_LCD_VS020C2A_UPS052=1
CFLAGS 	+= -DSP5K_LCD_GM15000_UPS052=1
#CFLAGS += -DSP5K_LCD_DUMMY=1
CFLAGS += -DSP5K_DISP_PIN_CB

# move out for V35
CFLAGS += -DSPCA6350_DEFAWB_MOVEOUT=1

# 3A Algorithm
CFLAGS += -DSP5K_ALGORITHM_AWB=1
CFLAGS += -DALGORITHM_G4_AWB

#AWB Version Here
ALGORITHM_G5_AWB := 1
#Auto Gamma / Auto WDR
CFLAGS += -DSP5K_DIQ_AUTO_Y_GAMMA=0
ifeq ($(WDR), YES)
CFLAGS += -DSP5K_DIQ_AUTO_WDR=1
else
CFLAGS += -DSP5K_DIQ_AUTO_WDR=0
endif
ifeq ($(HDR), YES)
CFLAGS += -DSP5K_DIQ_HDR=1
else
CFLAGS += -DSP5K_DIQ_HDR=0
endif

CFLAGS += -DSP5K_ALGORITHM_AE=1
ALGORITHM_AE := 1
ALGORITHM_DUAL_AE := 0
CFLAGS += -DSP5K_PVISO100=-1
CFLAGS += -DSP5K_CAPISO100=-1
CFLAGS += -DSP5K_FNUMBER=68
CFLAGS += -DUSE_RES_AETBL=0

ifeq ($(CVR_MODE), NO)
CFLAGS += -DSP5K_ALGORITHM_AF=1
ALGORITHM_AF := 1
endif

ifeq ($(DIQ_FRAMEWORK), YES)
CIQ_TXT_RESOURCE := NO
CFLAGS += -DSP5K_CIQ=0
CFLAGS += -DSP5K_DIQ_GAMMA=0
CFLAGS += -DSP5K_DIQ_WDR=0
CFLAGS += -DSP5K_DIQ_OB=0
CFLAGS += -DSP5K_DIQ_HUE=0
endif

# STORAGE
ifeq ($(nand), 1)
CFLAGS += -DHW_DISK_NAND=1
CFLAGS += -DSP5K_DISK_NAND=1
else
CFLAGS += -DSP5K_DISK_NAND=0
endif

ifeq ($(spi), 1)
CFLAGS += -DHW_DISK_SPI=1
CFLAGS += -DSP5K_DISK_SPI=1
else
CFLAGS += -DSP5K_DISK_SPI=0
endif

ifeq ($(emmc), 1)
CFLAGS += -DHW_DISK_EMMC=1
CFLAGS += -DSP5K_DISK_EMMC=1
else
CFLAGS += -DSP5K_DISK_EMMC=0
endif

#open FW2 support
ICAT_FW2_SUPPORT := 1

# Motion Detect
ifeq ($(MOTION_DETECT), YES)
CFLAGS += -DSP5K_MOTION_DETECT=1
endif

# Emulation Mode
ifeq ($(EMULATION_MODE), YES)
CFLAGS += -DAPI_TEST_INIT=1
endif

ifeq ($(APP_STATE_CUSTOMER_VIDEOPV), YES)
CFLAGS += -DAPP_STATE_CUSTOMER_VIDEOPV=1
else
CFLAGS += -DAPP_STATE_CUSTOMER_VIDEOPV=0
endif

# G_SENSOR
GSENSOR := 1
ifeq ($(GSENSOR), 1)
GSENSOR_BMA250E := 1
#GSENSOR_NONE := 1
CFLAGS += -DI2C_INTERFACE=1
CFLAGS += -DSPI_PORT2_INTERFACE=0
CFLAGS += -DSPI_PORT3_INTERFACE=0
endif

#########
# Function selection

# enable EIS function only if specific IQ is selected.
# EIS compensation result is certified by iCatch.

APP_VIDEO_EIS := NO
ifeq ($(APP_VIDEO_EIS), YES)
 CFLAGS += -DAPP_VIDEO_EIS=1
 ICAT_EIS := 1
 #ICAT_RSC := 1
endif


# GYRO_SENSOR & EIS
ifeq ($(ICAT_EIS), 1)
   	GYRO_NAME := ITG1020A
   	# Gyro orientation, 0: 0 degree, 1: 180 degree, 2: 90 degree, 3: 270 degree
   	CFLAGS += -DGYRO_ORIENT=3
   	#Gyro sensitivity 0: 31.25 degree/s, 1: 62.5 degree/s, 2: 125 degree/s, 3: 250 degree/s
   	#The setting value 3 is only for ITG-1020
   	CFLAGS += -DGYRO_SENSITIVITY=2
   	CFLAGS += -DSP5K_GYRO_$(GYRO_NAME)=1
   	CFLAGS += -DSP5K_ICAT_EIS=1

	EIS_DEBUG ?= NO
    ifeq ($(EIS_DEBUG), YES)
	    CFLAGS += -DAPP_IS_DBG_LOG=1
	    #CFLAGS += -DAPP_IS_DBG_YUV=1
    endif
else
   	GYRO_NAME := NONE
   	CFLAGS += -DSP5K_ICAT_EIS=0
endif


# JET_FEATURE
JET_FEATURE := 1
ifeq ($(JET_FEATURE), 1)
CFLAGS += -DJET_FEATURE
endif
# FW2 support
ifneq ($(ICAT_FW2_SUPPORT), 0)
CFLAGS += -DSP5K_FW2_SUPPORT=1
CFLAGS += -DAPP_17DVR_FW=$(ICAT_FW2_SUPPORT)
else
CFLAGS += -DSP5K_FW2_SUPPORT=0
endif

# Sensor VD WDT support
ifeq ($(ICAT_SENSOR_VD_WDT_SUPPORT), 1)
CFLAGS += -DSP5K_SENSOR_VD_WDT_SUPPORT=1
else
CFLAGS += -DSP5K_SENSOR_VD_WDT_SUPPORT=0
endif
##########
# ultra boot
CFLAGS += -DSP5K_ULTRA_FAST_BOOT=0

##########
# multi boot
MULTI_BOOT_CUSTOM_DEFINE := YES
MULTI_BOOT_TOOL_REMAP := YES

# host define symbols in host Makefile, named "USE_*", where "*"
# is "MULTI_BOOT_STAGE_*" define macros in "api/inc/multiboot_api.h"

MULTI_BOOT := NO
ifeq ($(MULTI_BOOT), YES)
CFLAGS += -DSP5K_MULTI_FAST_BOOT=1
    USE_MULTI_BOOT_STAGE_PWR_GPIO   := YES
    USE_MULTI_BOOT_STAGE_VFS        := NO
    USE_MULTI_BOOT_STAGE_DEV_START  := NO
    USE_MULTI_BOOT_STAGE_DEV_RTC    := NO
    USE_MULTI_BOOT_STAGE_DEV_TEST   := NO#YES
    USE_MULTI_BOOT_STAGE_DISK_RSV   := NO#YES
    USE_MULTI_BOOT_STAGE_DISP       := NO#YES
    USE_MULTI_BOOT_STAGE_SENSOR     := YES
    USE_MULTI_BOOT_STAGE_DEV_SECOND := YES
    USE_MULTI_BOOT_STAGE_DISK_MEDIA := NO
    USE_MULTI_BOOT_STAGE_DEV_AUDIO  := NO
    USE_MULTI_BOOT_STAGE_DEV_USB    := NO
    USE_MULTI_BOOT_STAGE_MEDIA      := NO
    USE_MULTI_BOOT_STAGE_MODESW     := NO
    USE_MULTI_BOOT_STAGE_SYS_RES    := YES
    USE_MULTI_BOOT_STAGE_APP_START  := YES
    USE_MULTI_BOOT_STAGE_CMD        := NO
    USE_MULTI_BOOT_STAGE_HOST       := NO
    USE_MULTI_BOOT_STAGE_APP_DELAY  := NO
    USE_MULTI_BOOT_STAGE_SLIDE      := NO
else
    CFLAGS += -DSP5K_MULTI_FAST_BOOT=0
    USE_MULTI_BOOT_STAGE_PWR_GPIO   := NO
    USE_MULTI_BOOT_STAGE_VFS        := NO
    USE_MULTI_BOOT_STAGE_DEV_START  := NO
    USE_MULTI_BOOT_STAGE_DEV_RTC    := NO
    USE_MULTI_BOOT_STAGE_DEV_TEST   := YES
    USE_MULTI_BOOT_STAGE_DISK_RSV   := NO
    USE_MULTI_BOOT_STAGE_DISP       := NO
    USE_MULTI_BOOT_STAGE_SENSOR     := NO
    USE_MULTI_BOOT_STAGE_DEV_SECOND := NO
    USE_MULTI_BOOT_STAGE_DISK_MEDIA := NO
    USE_MULTI_BOOT_STAGE_DEV_AUDIO  := NO
    USE_MULTI_BOOT_STAGE_DEV_USB    := NO
    USE_MULTI_BOOT_STAGE_MEDIA      := NO
    USE_MULTI_BOOT_STAGE_MODESW     := NO
    USE_MULTI_BOOT_STAGE_SYS_RES    := NO
    USE_MULTI_BOOT_STAGE_APP_START  := NO
    USE_MULTI_BOOT_STAGE_CMD        := NO
    USE_MULTI_BOOT_STAGE_HOST       := NO
    USE_MULTI_BOOT_STAGE_APP_DELAY  := NO
    USE_MULTI_BOOT_STAGE_SLIDE      := NO
endif

# 5310 model use internal TG
CFLAGS += -DSP5K_FRONT_MCLK_SRC_CUSTOM_DEFINE
CFLAGS += -DSP5K_FRONT_MCLK_SRC_SP5K_TGPLL=1
# nand
CFLAGS += -DSP5K_NAND_TIME_CUSTOM_DEFINE
CFLAGS += -DNAND_ACT_RCV_TIME=0x11 # rcv~=20.8ns, act~=20.8ns
CFLAGS += -DNAND_ACT_RCV_TIME_192MHZ=0x23 # (rcv_time << 4 | act_time), rcv~=10.4ns, act~=15.6ns
# clock
CFLAGS += -DSP5K_CPU_CLK_CUSTOM_DEFINE
#CFLAGS += -DCPU_CLK=$(CLK_360MHZ)
CFLAGS += -DCPU_CLK=$(CLK_300MHZ)

# We are evb now, so no need resource from card
#CFLAGS += -DLOAD_RESOURCE_FROM_CARD=1

RSV_A_SIZE := 0x10E0000
RSV_B_SIZE := 0x80000
#FRM_DRAM_PRM := EVB_DDR3_2G_360MHz.prm

#ifeq ($(HW_DDR3_PARM_2G), YES)
#CFLAGS += -DSP5K_HW_DDR3_PARM_2G=1
#ifeq ($(UVC_MODE), YES)
#FRM_DRAM_PRM := EVB_DDR3_2G_MDP-450MHz.prm
#else
#FRM_DRAM_PRM := EVB_DDR3_2G_MDP-300MHz.prm
#endif
#else
CFLAGS += -DSP5K_HW_DDR3_PARM_2G=0
#ifeq ($(UVC_MODE), YES)
FRM_DRAM_PRM := EVB_DDR3_1G_MDP_2-450MHz.prm
#else
#FRM_DRAM_PRM := EVB_DDR3_1G_MDP_2-300MHz.prm
#endif
#endif

MULTIBOOT_FLASH_SIZE_ALIGN512 := 4 # 1 for page size 512B NAND; 4 for page size 2KB NAND; 8 for page size 4KB NAND;

ifeq ($(HOST_MAKE), YES)

# project library

PRJ_LIB += \
 $(THIRD_LIB_PATH)/iq/app_iq.a

PRJ_LIB += \
 $(THIRD_LIB_PATH)/iq/app_iq_off.a

PRJ_LIB += \
 $(THIRD_LIB_PATH)/iq/app_icatware_common.a

ifeq ($(ALGORITHM_G46_AWB), 1)
PRJ_LIB += \
 $(THIRD_LIB_PATH)/iq/app_awbalg.a
endif

ifeq ($(ALGORITHM_G5_AWB), 1)
PRJ_LIB += \
 $(THIRD_LIB_PATH)/iq/app_awbalg.a
endif

ifeq ($(ALGORITHM_AE), 1)
PRJ_LIB += \
 $(THIRD_LIB_PATH)/iq/app_aealg.a
endif

ifeq ($(ALGORITHM_AF), 1)
PRJ_LIB += \
 $(THIRD_LIB_PATH)/iq/app_afalg.a
endif

ifeq ($(MOTION_DETECT), YES)
PRJ_LIB += \
 $(THIRD_LIB_PATH)/iq/app_md.a
endif

ifeq ($(IMAGE_EFFECT), YES)
PRJ_LIB += \
 $(THIRD_LIB_PATH)/iq/app_ie.a
 
PRJ_LIB += \
 $(THIRD_LIB_PATH)/iq/app_ie_iqoff.a
endif

ifeq ($(DIQ_FRAMEWORK), YES)
ifeq ($(YES), $(filter $(YES), WDR HDR))
PRJ_LIB += \
 $(THIRD_LIB_PATH)/iq/app_autodr.a
endif
endif


# BIN DAT8 DAT16:
#	Resources shared by all project, built from resource/A & resource/B to download/A & download/B
# PRJ_BIN PRJ_DAT8 PRJ_DAT16:
#	Resources under $(RES_PRJ_PATH), build from resource/$(RES_PRJ_PATH)/A & resource/$(RES_PRJ_PATH)/B to download/A & download/B
# SHARED_BIN SHARED_DAT8 SHARED_DAT16:
#	Resources under $(RES_SHARED_PATH), build from resource/$(RES_SHARED_PATH)/A & resource/$(RES_SHARED_PATH)/B to download/A & download/B
#   If this project like to use the resources from another project, defined RES_SHARED_PATH as that project and define SHARED_XXX for those resources

ROOT := A
ifeq ($(DIQ_FRAMEWORK), YES)
WDRFT_BIN := ./resource/$(PRJ_NAME)/A/RO_RES/IQ/$(IQ_NAME)/WDRFT.BIN
DIQ_OTHER_BIN :=
ifneq (,$(wildcard $(WDRFT_BIN)))
DIQ_OTHER_BIN += WDRFT.BIN
endif
endif

RES_PRJ_PATH := $(PRJ_NAME)
RES_SHARED_PATH :=
RES_PLATFORM_PATH := A/RO_RES/$(shell echo '$(PLATFORM)' | \
	/bin/sed -e 's/^[^0-9]*//' -e 's/[^0-9]*$$//')

# BIN: resources will be copied directly
BIN += \

#IQ PATH
IQ_BINPATH := A/RO_RES/IQ/$(IQ_NAME)

ICON_PATH := $(RES_PATH)/$(PRJ_NAME)/A/RO_RES/UI/ICON
ICON_RES := $(addprefix A/RO_RES/UI/ICON/,$(notdir $(wildcard $(ICON_PATH)/*.*)))

JPG_PATH := $(RES_PATH)/$(PRJ_NAME)/A/RO_RES/UI/JPG
JPG_RES := $(addprefix A/RO_RES/UI/JPG/,$(notdir $(wildcard $(JPG_PATH)/*.*)))

SST_PATH := $(RES_PATH)/$(PRJ_NAME)/A/RO_RES/UI/SST
SST_RES := $(addprefix A/RO_RES/UI/SST/,$(notdir $(wildcard $(SST_PATH)/*.*)))

WAV_PATH := $(RES_PATH)/$(PRJ_NAME)/A/RO_RES/WAV
WAV_RES := $(addprefix A/RO_RES/WAV/,$(notdir $(wildcard $(WAV_PATH)/*.*)))

WIFI_PATH := $(RES_PATH)/$(PRJ_NAME)/B/UDF
WIFI_MTK_RES := $(addprefix B/UDF/,$(notdir $(wildcard $(WIFI_PATH)/*.BIN)))
WIFI_RES := $(addprefix B/UDF/,$(notdir $(wildcard $(WIFI_PATH)/*.CFG)))

PRJ_BIN = \
A/RO_RES/IQ/$(IQ_NAME)/AWBCTT.BIN\
A/RO_RES/IQ/$(IQ_NAME)/AWBFILT.BIN\
A/RO_RES/CALIB/AWBCALIB.BIN\
A/RO_RES/IQ/$(IQ_NAME)/AWDRALG.BIN\
A/RO_RES/IQ/$(IQ_NAME)/AECONFIG.BIN\
A/RO_RES/IQ/$(IQ_NAME)/AEPCHART50HZ10F.BIN\
A/RO_RES/IQ/$(IQ_NAME)/AEPCHART50HZ15F.BIN\
A/RO_RES/IQ/$(IQ_NAME)/AEPCHART50HZ30F.BIN\
A/RO_RES/IQ/$(IQ_NAME)/AEPCHART50HZ60F.BIN\
A/RO_RES/IQ/$(IQ_NAME)/AEPCHART50HZISO100.BIN\
A/RO_RES/IQ/$(IQ_NAME)/AEPCHART50HZCAP.BIN\
A/RO_RES/IQ/$(IQ_NAME)/AEPCHART50HZCAPMD.BIN\
A/RO_RES/IQ/$(IQ_NAME)/AEPCHART60HZ10F.BIN\
A/RO_RES/IQ/$(IQ_NAME)/AEPCHART60HZ15F.BIN\
A/RO_RES/IQ/$(IQ_NAME)/AEPCHART60HZ30F.BIN\
A/RO_RES/IQ/$(IQ_NAME)/AEPCHART60HZ60F.BIN\
A/RO_RES/IQ/$(IQ_NAME)/AEPCHART60HZISO100.BIN\
A/RO_RES/IQ/$(IQ_NAME)/AEPCHART60HZCAP.BIN\
A/RO_RES/IQ/$(IQ_NAME)/AEPCHART60HZCAPMD.BIN\
A/RO_RES/IQ/$(IQ_NAME)/AEPCHART120F.BIN\
A/RO_RES/IQ/$(IQ_NAME)/AEPCHART240F.BIN\
A/RO_RES/IQ/$(IQ_NAME)/AEWINDOWLV.BIN\
A/RO_RES/IQ/$(IQ_NAME)/AEWINDOWMULTI.BIN\
A/RO_RES/IQ/$(IQ_NAME)/AEWINDOWCENTER.BIN\
A/RO_RES/IQ/$(IQ_NAME)/AEWINDOWSPOT.BIN\
A/RO_RES/IQ/$(IQ_NAME)/AETARGET.BIN\
$(RES_PLATFORM_PATH)/FWXDN16.BIN\
$(RES_PLATFORM_PATH)/DATSTAMP.SFN\
$(RES_PLATFORM_PATH)/BTNADC.BIN\
$(RES_PLATFORM_PATH)/USBUVC.BIN\
A/RO_RES/USBSTR.TXT
PRJ_BIN += $(ICON_RES)
PRJ_BIN += $(JPG_RES)
PRJ_BIN += $(SST_RES)
PRJ_BIN += $(WAV_RES)

PRJ_BIN += \
        A/RO_RES/UI/FONT/DATSTAMP.SFN\
        A/RO_RES/UI/FONT/DATESTAMP_24.SFN\
	A/RO_RES/UI/FONT/LOGO.SFN\
	A/RO_RES/UI/FONT/ENGLISH_32.SFN\
	A/RO_RES/UI/FONT/ENGLISH_42.SFN\
	A/RO_RES/UI/FONT/SCHINESE_32.SFN\
	A/RO_RES/UI/FONT/SCHINESE_42.SFN\
	A/RO_RES/UI/FONT/TCHINESE_32.SFN\
	A/RO_RES/UI/FONT/TCHINESE_42.SFN\

ifeq ($(WIFION),YES)
PRJ_BIN += $(WIFI_RES) $(WIFI_FW_RES)
endif


ifeq ($(BTON), YES)
# rtlbt_config.bin : RTL8723BS config file
# rtlbt_fw.bin : RTL8723BS fw file
BT_PATH := $(RES_PATH)/$(PRJ_NAME)/A/RO_RES/BLUETOOTH
BT_RES := $(addprefix A/RO_RES/BLUETOOTH/,$(notdir $(wildcard $(BT_PATH)/*.*)))
PRJ_BIN += $(BT_RES)
endif

SHARED_BIN =

# DAT8: resources will be converted by t2b -b 1
DAT8 += \


PRJ_DAT8 +=\
	A/RO_RES/DISP/DISPGAMA.DAT\
	A/RO_RES/DISP/DISPMAX.DAT\
	A/RO_RES/DISP/DISPGAM0.DAT\
	A/RO_RES/DISP/DISPMAX0.DAT\
	A/RO_RES/CALIB/CALIB.DAT\
	B/USER_RES/UISTILLVIDEO.DAT\
	B/USER_RES/USER_SET.DAT\

SHARED_DAT8 =

# DAT16: resources will be converted by t2b -b 2
DAT16 =

PRJ_DAT16 +=\
	B/UDF/UDF.DAT\
	A/ADF/ADF.DAT\
	A/RO_RES/CALIB/BATTERY.DAT\
	A/RO_RES/CALIB/CALIBAF.DAT

SHARED_DAT16 =

#APPUI_FIF_BIN= \
#	USER_SET.BIN\
#	UIPMODE.BIN\
#	UIVIDEO.BIN

APPUI_COLD_BIN= \
	BATTERY.BIN\
	CALIB.BIN\
	CALIBAF.BIN

APPUI_WAV_BIN =\
	 BEEP.WAV\
	 WARNING.WAV\
	 SHUTTER.WAV

ifeq ($(DIQ_FRAMEWORK), YES)
DIQ_OTHER_FIF_BIN= $(addprefix $(IQ_NAME)/, $(DIQ_OTHER_BIN))
endif

LENSIQ_FIF_BIN = \
        $(LENS_BIN)

endif # HOST_MAKE
